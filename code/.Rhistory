lwd=3,
columns_width=c(5,2,5),
main_left="Fylogeneze",
main_right="Potravní chování",
hang=F, axes=F)%>%
entanglement()# lower entanglement = better readability
legend("bottomleft",
legend = continent_legend,
col = legend_colors,
pch = 19,  # Solid circle
bty = "n",  # No border box for cleaner look
pt.cex = 2, cex = 1.6,  # Adjust point & text size
text.col = "black",
horiz = FALSE,
title = "Barvy druhových jmen dle výskytu",
inset = c(0, 0.05))
dev.off()
mantel_Global_P_G1 <- mantel(dist_Bray_Global, phylo_meta_mantel, method = "spearman", permutations = 999)
print("Results of Mantel test between Bray-Curtis Guilds and Phylogeny")
print(mantel_Global_P_G1)
############# Global phylogeny-morphology codendrogram ########################
dendro_Global_morpho_step1side<-untangle(dendro_Global_morpho, dendro_meta_phylo, method = "step1side")
# second dendrogram is fixed
# this steps allows us to plot ladderized phylogeny and untangled left dendrogram
tanglegram(dendro_meta_phylo, dendro_Global_morpho_step1side[[1]],
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="Phylogeny",
main_right="Morphology",
hang=F)%>%
entanglement()# lower entanglement = better readability
mantel_Global_P_M <- mantel(dist_morpho_Global, phylo_meta_mantel, method = "spearman", permutations = 999)
print("Results of Mantel test between Morphology and Phylogeny")
print(mantel_Global_P_M)
############# Global guilds-morphology codendrogram (Bray-Curtis) ########################
dendlist(dendro_meta_bray, dendro_Global_morpho)%>%
dendextend::untangle(method="step2side")%>%# untangles both sides for best readability
tanglegram(common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=,
lwd=3,
main_left="Bray-Curtis guilds",
main_right="Morphology",
hang=F)%>%
entanglement()# lower entanglement = better readability
mantel_Global_M_G1 <- mantel(dist_morpho_Global, dist_Bray_Global, method = "spearman", permutations = 999)
print("Results of Mantel test between Bray-Curtis Guilds and Morphology")
print(mantel_Global_M_G1)
######################## Per-Continent Codendrograms ################################
# prepare the dendrograms
dendro_Asia_phylo<-dendextend::ladderize(dendro_Asia_phylo)# ladderized phylogeny (ape)
dendro_Asia_bray_step1side<-untangle(dendro_Asia_bray, dendro_Asia_phylo, method = "step1side")# untangle bray guilds
dendro_Asia_morpho_step1side<-untangle(dendro_Asia_morpho, dendro_Asia_phylo, method = "step1side")# untangle morphology
dendro_Australia_phylo<-dendextend::ladderize(dendro_Australia_phylo)# ladderized phylogeny (ape)
dendro_Australia_bray_step1side<-untangle(dendro_Australia_bray, dendro_Australia_phylo, method = "step1side")# untangle bray guilds
dendro_Australia_morpho_step1side<-untangle(dendro_Australia_morpho, dendro_Australia_phylo, method = "step1side")# untangle morphology
dendro_Europe_phylo<-dendextend::ladderize(dendro_Europe_phylo)# ladderized phylogeny (ape)
dendro_Europe_bray_step1side<-untangle(dendro_Europe_bray, dendro_Europe_phylo, method = "step1side")# untangle bray guilds
dendro_Europe_morpho_step1side<-untangle(dendro_Europe_morpho, dendro_Europe_phylo, method = "step1side")# untangle
dendro_North_America_phylo<-dendextend::ladderize(dendro_North_America_phylo)# ladderized phylogeny (ape)
dendro_North_America_bray_step1side<-untangle(dendro_North_America_bray, dendro_North_America_phylo, method = "step1side")# untangle bray guilds
dendro_North_America_morpho_step1side<-untangle(dendro_North_America_morpho, dendro_North_America_phylo, method = "step1side")# untangle morphology
# Coloring guilds
color_cluster<-function(dendro_clusters,dendro_order,n_clusters=4){
clusters <- cutree(dendro_clusters, k = n_clusters)
cluster_order <- labels(dendro_clusters)
cluster_df <- data.frame(
label = names(clusters),
cluster = clusters
)
cluster_df <- cluster_df[match(cluster_order, cluster_df$label), ]
cluster_colors <- brewer.pal(n_clusters, "Set2")
label_colors <- cluster_colors[cluster_df$cluster]
names(label_colors) <- cluster_df$label
phylo_order <-(labels(dendro_order))
final_colors <- label_colors[match(phylo_order, names(label_colors))]
return(final_colors)
}
color_cluster_asia<-color_cluster(dendro_Asia_bray_step1side[[1]], dendro_Asia_phylo, n_clusters=6)
color_cluster_australia<-color_cluster(dendro_Australia_bray_step1side[[1]], dendro_Australia_phylo, n_clusters=6)
color_cluster_europe<-color_cluster(dendro_Europe_bray_step1side[[1]], dendro_Europe_phylo, n_clusters=6)
color_cluster_north_america<-color_cluster(dendro_North_America_bray_step1side[[1]], dendro_North_America_phylo, n_clusters=6)
#### Asia
svg("Asia_dendrogram.svg", width = 10, height = 10) # save as svg
tanglegram(dendro_Asia_phylo, dendro_Asia_bray_step1side[[1]],
color_lines = color_cluster_asia,
common_subtrees_color_lines = TRUE,
center=T,
highlight_distinct_edges = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=12.5,
margin_outer=3,
columns_width=c(5,1,5),
lwd=2.5,
main_left="Fylogeneze",
main_right="Potravní chování",
main="Asie",
hang=F, axes = F)%>%
entanglement()
dev.off()
mantel_Asia_P_G1 <- mantel(dist_Bray_Asia, phylo_Asia_mantel, method = "spearman", permutations = 999)
print(mantel_Asia_P_G1)
mantel_Asia_P_M <- mantel(dist_morpho_Asia, phylo_Asia_mantel, method = "spearman", permutations = 999)
print(mantel_Asia_P_M)
mantel_Asia_M_G1 <- mantel(dist_morpho_Asia, dist_Bray_Asia, method = "spearman", permutations = 999)
print(mantel_Asia_M_G1)
#### Australia
svg("Australia_dendrogram.svg", width = 10, height = 12)
tanglegram(dendro_Australia_phylo, dendro_Australia_bray_step1side[[1]],
color_lines = color_cluster_australia,
center=T,
highlight_distinct_edges = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=12.5,
margin_outer=5,
columns_width=c(5,1,5),
lwd=2.5,
main_left="Fylogeneze",
main_right="Potravní chování",
main="Austrálie",
hang=F, axes=F)%>%
entanglement()
dev.off() # lower entanglement = better readability
mantel_Australia_P_G1 <- mantel(dist_Bray_Australia, phylo_Australia_mantel, method = "spearman", permutations = 999)
print(mantel_Australia_P_G1)
mantel_Australia_P_M <- mantel(dist_morpho_Australia, phylo_Australia_mantel, method = "spearman", permutations = 999)
print(mantel_Australia_P_M)
mantel_Australia_M_G1 <- mantel(dist_morpho_Australia, dist_Bray_Australia, method = "spearman", permutations = 999)
print(mantel_Australia_M_G1)
#### Europe
svg("Europe_dendrogram.svg", width = 10, height = 6)
tanglegram(dendro_Europe_phylo, dendro_Europe_bray_step1side[[1]],
color_lines = color_cluster_europe,
center=T,
highlight_distinct_edges = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=12.5,
margin_outer=5,
columns_width=c(5,1,5),
lwd=2.5,
main_left="Fylogeneze",
main_right="Potravní chování",
main="Evropa",
hang=F, axes=F)%>%
entanglement()# lower entanglement = better readability
dev.off()
mantel_Europe_P_G1 <- mantel(dist_Bray_Europe, phylo_Europe_mantel, method = "spearman", permutations = 999)
print(mantel_Europe_P_G1)
mantel_Europe_P_M <- mantel(dist_morpho_Europe, phylo_Europe_mantel, method = "spearman", permutations = 999)
print(mantel_Europe_P_M)
mantel_Europe_M_G1 <- mantel(dist_morpho_Europe, dist_Bray_Europe, method = "spearman", permutations = 999)
print(mantel_Europe_M_G1)
#### North America
svg("North_America_dendrogram.svg", width = 10, height = 8)
tanglegram(dendro_North_America_phylo, dendro_North_America_bray_step1side[[1]],
color_lines = color_cluster_north_america,
center=T,
highlight_distinct_edges = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=12.5,
margin_outer=5,
columns_width=c(5,1,5),
lwd=2.5,
main_left="Fylogeneze",
main_right="Potravní chování",
main="Severní Amerika",
hang=F, axes = F)%>%
entanglement() # lower entanglement = better readability
dev.off()
mantel_North_America_P_G1 <- mantel(dist_Bray_North_America, phylo_North_America_mantel, method = "spearman", permutations = 999)
print(mantel_North_America_P_G1)
mantel_North_America_P_M <- mantel(dist_morpho_North_America, phylo_North_America_mantel, method = "spearman", permutations = 999)
print(mantel_North_America_P_M)
mantel_North_America_M_G1 <- mantel(dist_morpho_North_America, dist_Bray_North_America, method = "spearman", permutations = 999)
print(mantel_North_America_M_G1)
############### Network graphs #########################
# REWORK THIS PART ACCORDING TO MANTEL_GRAPH.R
###################### Global Mantel Graph ####################################
##################################### Guild visualization Global #######################################################
bray_tree_Global  <- as.phylo(dendro_meta_bray)
bray_tree_Asia  <- as.phylo(dendro_Asia_bray)
bray_tree_Australia  <- as.phylo(dendro_Australia_bray)
bray_tree_Europe  <- as.phylo(dendro_Europe_bray)
bray_tree_North_America  <- as.phylo(dendro_North_America_bray)
trait_labels<-c("Flycatch", "Glean", "Hover", "Pounce", "Probe", "Snatch", "Air", "Bark", "Flower", "Ground", "Leaf")
traits_Global <- phylo4d( x=bray_tree_Global, tip.data=matrix_Global_prop )
traits_Asia <- phylo4d( x=bray_tree_Asia, tip.data=matrix_Asia_prop )
traits_Australia <- phylo4d( x=bray_tree_Australia, tip.data=matrix_Australia_prop )
traits_Europe <- phylo4d( x=bray_tree_Europe, tip.data=matrix_Europe_prop )
traits_North_America <- phylo4d( x=bray_tree_North_America, tip.data=matrix_North_America_prop )
par(oma=c(6,2,2,0))
table.phylo4d(traits_Global, treetype="phylogram", symbol="circles", ratio.tree=0.2, center=F, scale=F, legend=F, grid=T, box=F, cex.symbol=0.3, cex.label=0.6, cex.legend=0.8, var.label=trait_labels, main="Guilds Global")
svg("table_Asia.svg", width = 6, height = 9)
table.phylo4d(traits_Asia, treetype="phylogram", symbol="circles", ratio.tree=0.2, center=F, scale=F, legend=F, grid=T, box=F, cex.symbol=0.4, cex.label=0.6, cex.legend=0.8, var.label=trait_labels, main="Asie")
dev.off()
svg("gridplot_global.svg", width = 20, height = 25) # save as svg
gridplot.phylo4d(traits_Global, tree.ladderize=T, center=F, scale=F, tree.type="phylogram",
tree.ratio=0.15, trait.bg.col = "white", show.box = F, trait.labels = trait_labels,
grid.vertical=T, grid.horizontal=F, main="", cex.main=1.2,
trait.cex=1.2, cell.col = white2red(200))
dev.off()
################## Per-Continent Guild visualization ############################
gridplot.phylo4d(traits_Asia, tree.ladderize=T, center=F, scale=F, tree.type="phylogram", tree.ratio=0.15, trait.bg.col = "white", show.box = T, trait.labels = trait_labels, main="Guilds Asia", cex.main=1.2, cell.col = white2red(200))
gridplot.phylo4d(traits_Australia, tree.ladderize=T, center=F, scale=F, tree.type="phylogram", tree.ratio=0.15, trait.bg.col = "white", show.box = T, trait.labels = trait_labels, main="Guilds Australia", cex.main=1.2, cell.col = white2red(200))
gridplot.phylo4d(traits_Europe, tree.ladderize=T, center=F, scale=F, tree.type="phylogram", tree.ratio=0.15, trait.bg.col = "white", show.box = T, trait.labels = trait_labels, main="Guilds Europe", cex.main=1.2, cell.col = white2red(200))
gridplot.phylo4d(traits_North_America, tree.ladderize=T, center=F, scale=F, tree.type="phylogram", tree.ratio=0.15, trait.bg.col = "white", show.box = T, trait.labels = trait_labels, main="Guilds North America", cex.main=1.2, cell.col = white2red(200))
####################### Calculating specialization #######################
calculate_index_wide <- function(data, prop_columns, n_categories = 5) {
# Store the original rownames
original_rownames <- rownames(data)
# Calculate indices
result <- data %>%
rowwise() %>%
mutate(
B = 1 / sum((c_across(all_of(prop_columns)))^2, na.rm = TRUE),
Ba = 1 - (B - 1) / (n_categories - 1)
) %>%
ungroup()%>%
select(Ba, B)
# Restore original rownames
rownames(result) <- original_rownames
return(result)
}
specialization_global_method<-calculate_index_wide(matrix_Global_prop,1:6 , n_categories = 6)%>%
rename(BaM=Ba, BM=B)%>%
rownames_to_column("Sp_eBird")
specialization_global_substrate<-calculate_index_wide(matrix_Global_prop,7:11 , n_categories = 5)%>%
rename(BaS=Ba, BS=B)%>%
rownames_to_column("Sp_eBird")
#left join by sp_eBird
specialization_method_substrate <- left_join(specialization_global_substrate, specialization_global_method, by="Sp_eBird")%>%
mutate(continent = species_to_continent[Sp_eBird])%>%
filter(continent!="Multiple")
continent_labels <- c(
"Australia" = "Austrálie",
"Europe" = "Evropa",
"North_America" = "Severní Amerika",
"Asia" = "Asie"
)
library(lmodel2)
continents <- unique(specialization_method_substrate$continent)
# Loop over continents and perform RMA
rma_results <- lapply(continents, function(cont) {
sub_data <- subset(specialization_method_substrate, continent == cont)
model <- lmodel2(BaM ~ BaS, data = sub_data, nperm = 0)
list(
continent = cont,
rma = model$regression.results[model$regression.results$Method == "RMA", ],
r = model$r,
pvalue = model$P.param
)
})
# scatterplot of BaS and BaM with color codes based on continent
svg("specialization_method_substrate.svg", width = 10, height = 10) # save as svg
ggplot(specialization_method_substrate, aes(x = BaM, y = BaS, color = continent)) +
geom_point(size = 5) +
scale_color_manual(values = continent_colors, labels = continent_labels) +
labs(
title = "",
x = "Specializace na metodu",
y = "Specializace na substrát"
) +
theme_classic() +
scale_x_continuous(labels = label_comma(decimal.mark = ","), limits = c(0.3, 1)) +
scale_y_continuous(labels = label_comma(decimal.mark = ","), limits = c(0.3, 1)) +
theme(
text = element_text(size = 18),
axis.title = element_text(size = 20),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")
) +
theme(legend.position = "bottom") +
geom_abline(
data = regression_lines,
aes(slope = slope, intercept = intercept, color = continent),
size = 2
) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +
guides(color = guide_legend(title = "Kontinenty:"))
# Loop over continents and perform RMA
rma_results <- lapply(continents, function(cont) {
sub_data <- subset(specialization_method_substrate, continent == cont)
model <- lmodel2(BaM ~ BaS, data = sub_data, nperm = 0)
list(
continent = cont,
rma = model$regression.results[model$regression.results$Method == "RMA", ],
r = model$r,
pvalue = model$P.param
)
})
View(rma_results)
rma_lines <- do.call(rbind, lapply(rma_results, function(res) {
data.frame(
continent = res$continent,
slope = res$rma$Slope,
intercept = res$rma$Intercept
)
}))
rma_lines <- do.call(rbind, lapply(rma_results, function(res) {
data.frame(
continent = res$continent,
slope = res$rma$Slope,
intercept = res$rma$Intercept
)
}))
pp <- list(p4,p3)
plot_grid(plotlist=pp, ncol=1, align='v', axis = 'l', rel_heights = c(1, 1, 1), labels = c("A", "B", "C")) +
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
pp <- list(p4,p3)
library(tidyverse)
library(gridExtra)
library(scales)
library(cowplot)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path)) #
load("metadata_clean.RData")
data <- data_clean %>%
filter(continent %in% c( "Antarctica","Europe", "Africa",
"South America", "Asia", "North America", "Oceania") &
!kingdom == "Protozoa")
# Some figures
# count of unique countries
data %>%
select(country) %>%
filter(!is.na(country)) %>%
distinct()%>%
count()
data %>%
select(group) %>%
filter(!is.na(group)) %>%
distinct()%>%
count()
data_clean%>%
select(GADM_level_1)%>%
filter(!is.na(GADM_level_1)) %>%
distinct()%>%
count()
# count of unique sources per continent
data %>%
group_by(continent) %>%
filter(!is.na(source_name)) %>%
distinct(source_name)%>%
count()
data%>%
group_by(country)%>%
distinct(source_name)%>%
count()%>%
ungroup()%>%
summarise(mean=mean(n))
# Sources plots -----------------------------------------------------------
## Number of unique sources by continent and age
un_sources_years <- data[,c("continent", "source_name", "year")]  %>%
distinct(continent, source_name, year, .keep_all = TRUE)
un_hashes_years <- data[,c("continent", "file_hash","source_name" ,"year")]  %>%
distinct(continent, file_hash, year,source_name, .keep_all = TRUE)
# Get current year
current_year <- year(Sys.Date())
# Create age categories
unique_sources <- un_sources_years %>%
mutate(age_category = case_when(
year >= (current_year - 5) ~ "Less than 5 years old",
year >= (current_year - 20) ~ "5-20 years old",
TRUE ~ "Older than 20 years"
))
# Convert to factor with specific order
unique_sources$age_category <- factor(unique_sources$age_category,
levels = c("Less than 5 years old",
"5-20 years old",
"Older than 20 years"))
# Count sources by continent and age category
continent_age_counts <- unique_sources %>%
group_by(continent, age_category) %>%
summarize(count = n()) %>%
ungroup() %>%
mutate(count_log = log(count))
# plot
p2 <- ggplot(continent_age_counts, aes(x = reorder(continent, -count), y = count, fill = age_category)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "",
x = "",
y = "Number of Sources",
fill = "Source Age"
) +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 1500, by = 250), expand=c(0.01,0)) +
coord_flip() +
scale_fill_manual(values = c(
"Less than 5 years old" = "#4CAF50",
"5-20 years old" = "#2196F3",
"Older than 20 years" = "#FFC107"
)) +
theme(text=element_text(size=20),
legend.position = c(0.95, 0.95),
legend.justification = c(1, 1),
legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'),
legend.box.background = element_blank(),
axis.text.y= element_text(color="black"),
axis.text.x= element_text(color="black")
)
p2
# Records plots -----------------------------------------------------------
## Number of Records by Continent and Kingdom
# Count records by continent and kingdom
continent_kingdom_counts <- data %>%
group_by(continent, kingdom) %>%
summarize(count = n()) %>%
ungroup() %>%
mutate(count_log = log(count)) %>%
arrange(count)
p3 <- ggplot(continent_kingdom_counts %>%
arrange(count),
aes(x = reorder(continent, -count), y = count, fill = kingdom)) +
geom_bar(stat = "identity", position = "stack") +
scale_y_continuous(breaks = seq(0, 3500, by = 250), expand=c(0.01,0)) +
labs(
title = "",
x = "",
y = "Number of Records",
fill = "Kingdom"
) +
theme_minimal() +
coord_flip() +
scale_fill_brewer(palette = "Set1") +
theme(text=element_text(size=20),
legend.position = c(0.95, 0.95),
legend.justification = c(1, 1),
legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'),
legend.box.background = element_blank(),
axis.text.y= element_text(color="black"),
axis.text.x= element_text(color="black")
)
p3
# Count records by year
year_counts<-un_sources_years%>%
group_by(year) %>%
summarize(count = n())
year_counts$year <- as.Date(paste0(year_counts$year, "-01-01"))
# p4 histogram of year counts
p4 <- ggplot(year_counts, aes(x = year, y = count)) +
geom_bar(stat = "identity", fill = "#4CAF50") +
labs(
title = "",
x = "Year",
y = "Number of Sources"
) +
theme_minimal() +
scale_x_date(date_labels = "%Y", date_breaks = "10 year") +
theme(text=element_text(size=20),
axis.text.y= element_text(color="black", size=15),
axis.text.x= element_text(color="black")
)
p4
pp <- list(p4,p3)
plot_grid(plotlist=pp, ncol=1, align='v', axis = 'l', rel_heights = c(1, 1, 1), labels = c("A", "B", "C")) +
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
p1
plot_grid(plotlist=pp, ncol=1, align='v', axis = 'l', rel_heights = c(1, 1, 1), labels = c("A", "B", "C")) +
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
pp <- list(p4,p3)
plot_grid(plotlist=pp, ncol=1, align='v', axis = 'l', rel_heights = c(1, 1, 1), labels = c("A", "B", "C")) +
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
p4
p3
p3 <- ggplot(continent_kingdom_counts %>%
arrange(count),
aes(x = reorder(continent, -count), y = count, fill = kingdom)) +
geom_bar(stat = "identity", position = "stack") +
scale_y_continuous(breaks = seq(0, 3500, by = 250), expand=c(0.01,0)) +
labs(
title = "",
x = "",
y = "Number of Records",
fill = "Kingdom"
) +
theme_minimal() +
coord_flip() +
scale_fill_brewer(palette = "Set1") +
theme(text=element_text(size=30),
legend.position = c(0.95, 0.95),
legend.justification = c(1, 1),
legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'),
legend.box.background = element_blank(),
axis.text.y= element_text(color="black"),
axis.text.x= element_text(color="black")
)
source("~/GitHub/RegRed_metadata/code/02_Plots.R", echo=TRUE)
p3
# p4 histogram of year counts
p4 <- ggplot(year_counts, aes(x = year, y = count)) +
geom_bar(stat = "identity", fill = "#4CAF50") +
labs(
title = "",
x = "Year",
y = "Number of Sources"
) +
theme_minimal() +
scale_x_date(date_labels = "%Y", date_breaks = "10 year") +
theme(text=element_text(size=30),
axis.text.y= element_text(color="black", size=15),
axis.text.x= element_text(color="black")
)
p3
p4
p4
p3
